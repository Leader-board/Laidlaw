digraph "benchmark.cpp.229t.ehcleanup2" {
overlap=false;
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_1889_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_1889_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_1889_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:1073741825\<bb\ 2\>:\l\
|if\ (argc_9(D)\ !=\ 3)\l\
\ \ goto\ \<bb\ 3\>;\ [0.04%]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [99.96%]\l\
}"];

	fn_1889_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:429497\<bb\ 3\>:\l\
|__builtin_puts\ (&\"Arguments:\ filename\ optimisationflag\"[0]);\l\
|exit\ (-1);\l\
}"];

	fn_1889_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:1073312327\<bb\ 4\>:\l\
|mainbase\ ();\l\
|_1\ =\ MEM[(char\ *\ *)argv_14(D)\ +\ 8B];\l\
|_16\ =\ fopen\ (_1,\ \"a\");\l\
}"];

	fn_1889_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:1073312327\<bb\ 5\>:\l\
|totalscore.24_2\ =\ totalscore;\l\
|_3\ =\ (double)\ totalscore.24_2;\l\
|_4\ =\ MEM[(char\ *\ *)argv_14(D)\ +\ 16B];\l\
|fprintf\ (_16,\ \"%s\ %lf\\n\",\ _4,\ _3);\l\
}"];

	fn_1889_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:1073312327\<bb\ 6\>:\l\
|fclose\ (_16);\l\
}"];

	fn_1889_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:1073312327\<bb\ 7\>:\l\
|std::__ostream_insert\<char,\ std::char_traits\<char\>\ \>\ (&cout,\ \"Your\ system\ has\ scored\ a\ total\ of\ \",\ 34);\l\
|totalscore.25_6\ =\ totalscore;\l\
|_26\ =\ (double)\ totalscore.25_6;\l\
|_27\ =\ std::basic_ostream\<char\>::_M_insert\<double\>\ (&cout,\ _26);\l\
|std::__ostream_insert\<char,\ std::char_traits\<char\>\ \>\ (_27,\ \"\ points!\",\ 8);\l\
|__c\ =\ 10;\l\
|std::__ostream_insert\<char,\ std::char_traits\<char\>\ \>\ (_27,\ &__c,\ 1);\l\
|__c\ =\{v\}\ \{CLOBBER\};\l\
|return\ 0;\l\
}"];

	fn_1889_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 8\>:\l\
|\<L4\>:\l\
|_36\ =\ __builtin_eh_filter\ (1);\l\
|if\ (_36\ ==\ 1)\l\
\ \ goto\ \<bb\ 10\>;\ [33.00%]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [67.00%]\l\
}"];

	fn_1889_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 9\>:\l\
|\<L9\>:\l\
|resx\ 1\l\
}"];

	fn_1889_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 10\>:\l\
|\<L5\>:\l\
|MEM[(struct\ \ &)&e]\ =\{v\}\ \{CLOBBER\};\l\
|e._vptr.exception\ =\ &MEM[(void\ *)&_ZTVSt9exception\ +\ 16B];\l\
|_5\ =\ __builtin_eh_pointer\ (1);\l\
|__cxa_begin_catch\ (_5);\l\
|std::operator\<\<\ \<std::char_traits\<char\>\ \>\ (&cerr,\ \"File\ error!\ \\n\");\l\
}"];

	fn_1889_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 11\>:\l\
|std::exception::~exception\ (&e);\l\
|__cxa_end_catch\ ();\l\
|e\ =\{v\}\ \{CLOBBER\};\l\
goto\ \<bb\ 7\>;\ [100.00%]\l\
}"];

	fn_1889_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 12\>:\l\
|\<L6\>:\l\
|std::exception::~exception\ (&e);\l\
|resx\ 5\l\
}"];

	fn_1889_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:0\<bb\ 13\>:\l\
|\<L7\>:\l\
|__cxa_end_catch\ ();\l\
|resx\ 3\l\
}"];

	fn_1889_basic_block_0:s -> fn_1889_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_2:s -> fn_1889_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_2:s -> fn_1889_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true,label="[99%]"];
	fn_1889_basic_block_4:s -> fn_1889_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_4:s -> fn_1889_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_5:s -> fn_1889_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_5:s -> fn_1889_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_6:s -> fn_1889_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_6:s -> fn_1889_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_7:s -> fn_1889_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_1889_basic_block_8:s -> fn_1889_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true,label="[33%]"];
	fn_1889_basic_block_8:s -> fn_1889_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true,label="[67%]"];
	fn_1889_basic_block_10:s -> fn_1889_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_10:s -> fn_1889_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_11:s -> fn_1889_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1889_basic_block_12:s -> fn_1889_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1889_basic_block_0:s -> fn_1889_basic_block_1:n [style="invis",constraint=true];
}
}
